# 1) Создайте класс MyString, который будет наследоваться от str.
# Определите 2 своих метода:
# append, который будет принимать строку и добавлять её в конец исходной
# pop, который удаляет из строки последний элемент и возвращает его.
# Пример:
# example = MyString('String')
# example.append('hello')
# print(example) -> 'Stringhello'
# print(example.pop()) -> 'o'
# print(example) -> 'Stringhell'
# """

class MyString:
    def __str__(self, w1, w2) -> str:
        self.w1 = w1
        self.w2 = w2

    def append(self):
        return self.w1 + self.w2


obj = MyString()
obj.w1 = 'String'
obj.w2 = 'hello'
print(obj.append())
# print(obj)


# 2)Dollar.
# Создайте функцию dollarize, которая принимает дробное число (float) и переводит его в
# долларизованный формат:
# dollarize(123456.78901) -> "$123,456.80"
# dollarize(-123456.7801) -> "-$123,456.78"
# dollarize(1000000) -> "$1,000,000"
# Создайте класс MoneyFmt, который содержит один единственный атрибут amount и 4 метода:
# init - инициализирует значение атрибута amount
# update - задаёт объекту новое значение amount
# repr - возвращает значение float
# str - метод, который реализует логику функции dollarize()
# //Вывод должен выглядеть следующим образом:
# cash = MoneyFmt(12345678.021)
# print(cash) -- выводит "$12,345,678.02"
# cash.update(100000.4567)
# print(cash) -- выводит "$100,000.46"
# cash.update(-0.3)
# print(cash) -- выводит "-$0.30"
# repr(cash) -- выводит -0.3
# """

# 4) Герой.
# Разработайте программу по следующему описанию.
# В некой игре-стратегии есть солдаты и герои. У всех есть свойство, содержащее
# уникальный номер объекта, и свойство, в котором хранится принадлежность команде. У
# солдат есть метод "иду за героем", который в качестве аргумента принимает объект типа
# "герой". У героев есть метод увеличения собственного уровня.
# В основной ветке программы создается по одному герою для каждой команды. В цикле
# генерируются объекты-солдаты. Их принадлежность команде определяется случайно.
# Солдаты разных команд добавляются в разные списки.
# Измеряется длина списков солдат противоборствующих команд и выводится на экран. У
# героя, принадлежащего команде с более длинным списком, поднимается уровень.
# Отправьте одного из солдат первого героя следовать за ним. Выведите на экран
# идентификационные номера этих двух юнитов.
# """